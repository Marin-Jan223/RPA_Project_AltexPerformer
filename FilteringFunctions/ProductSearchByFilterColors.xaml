<Activity mc:Ignorable="sap sap2010" x:Class="ProductSearchByFilterColors" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Product" Type="InArgument(x:String)" />
    <x:Property Name="out_Product" Type="OutArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>832,1769.6</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ProductSearchByFilterColors_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="ProductSearchByFilterColors" sap:VirtualizedContainerService.HintSize="649.6,1704.8" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:List(x:String)" Default="[New List(of String)]" Name="ColorMatches" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="ColorsList">
        <Variable.Default>
          <VisualBasicValue x:TypeArguments="scg:List(x:String)" ExpressionText="New List(Of String) From {&quot;sky&quot;,&quot;onyx&quot;,&quot;aquamarine&quot;,&quot;silvery&quot;,&quot;glossy&quot;,&quot;iris&quot;,&quot;neon&quot;,&quot;interstellar&quot;,&quot;mystery&quot;,&quot;bubblegum&quot;,&quot;tropical&quot;,&quot;orange&quot;,&quot;violet&quot;,&quot;twilight&quot;,&quot;pacific&quot;,&quot;space&quot;,&quot;ice&quot;,&quot;lake&quot;,&quot;steel&quot;,&quot;milanese&quot;,&quot;aluminum&quot;,&quot;rococo&quot;,&quot;mint&quot;,&quot;starry&quot;,&quot;emerald&quot;,&quot;black&quot;, &quot;negru&quot;, &quot;bleu&quot;, &quot;blue&quot;, &quot;brown&quot;,&quot;maro&quot;,&quot;charcoal&quot;,&quot;gri&quot;,&quot;gray&quot;,&quot;coral&quot;,&quot;cosmo&quot;,&quot;crystal&quot;,&quot;dark&quot;,&quot;deep&quot;,&quot;electric&quot;,&quot;glow&quot;,&quot;gold&quot;,&quot;auriu&quot;,&quot;graphite&quot;,&quot;green&quot;,&quot;verde&quot;,&quot;grey&quot;,&quot;indigo&quot;,&quot;lavender&quot;,&quot;lilac&quot;,&quot;liquid&quot;,&quot;metalic&quot;,&quot;midnight&quot;,&quot;navy&quot;,&quot;ocean&quot;,&quot;orchid&quot;,&quot;peacock&quot;,&quot;pearl&quot;,&quot;pebble&quot;,&quot;pink&quot;,&quot;platinum&quot;,&quot;pure&quot;,&quot;purple&quot;,&quot;mov&quot;,&quot;roz&quot;,&quot;purpuriu&quot;,&quot;rosu&quot;,&quot;rose&quot;,&quot;saphire&quot;,&quot;albastru&quot;,&quot;silver&quot;,&quot;argintiu&quot;,&quot;sand&quot;,&quot;white&quot;,&quot;alb&quot;,&quot;yellow&quot;,&quot;galben&quot;,&quot;cosmic&quot;,&quot;phantom&quot;,&quot;cream&quot;,&quot;mariana&quot;,&quot;warm&quot;,&quot;auamarine&quot;,&quot;graphite&quot;,&quot;lava&quot;,&quot;starlight&quot;,&quot;silvery&quot;,&quot;iced&quot;,&quot;sierra&quot;,&quot;aurora&quot;,&quot;beige&quot;,&quot;liliac&quot;,&quot;light&quot;}" />
        </Variable.Default>
      </Variable>
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign sap:VirtualizedContainerService.HintSize="587.2,81.6" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:List(x:String)">[ColorMatches]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:List(x:String)">[ColorsList.Where(Function (x) in_Product.ToLower.Contains(x)).ToList]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName=" For Each color match in in_Product name" sap:VirtualizedContainerService.HintSize="587.2,480.8" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[ColorMatches]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="ColorMatch" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="476.8,292.8" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[in_Product]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[Regex.Replace(in_Product,ColorMatch,"",RegexOptions.IgnoreCase)]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_3">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[in_Product]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String" xml:space="preserve">[in_Product.Replace("  "," ").TrimEnd.TrimEnd(","c)]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <If Condition="[in_Product.ToLower.Contains(&quot;red&quot;)]" sap:VirtualizedContainerService.HintSize="587.2,829.6" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="553.6,646.4" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If Condition="[in_Product.ToLower.Contains(&quot;redmi&quot;)]" sap:VirtualizedContainerService.HintSize="510.4,556.8" sap2010:WorkflowViewState.IdRef="If_2">
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="300,82.4" sap2010:WorkflowViewState.IdRef="Sequence_5">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap:VirtualizedContainerService.HintSize="476.8,291.2" sap2010:WorkflowViewState.IdRef="Sequence_6">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="433.6,80.8" sap2010:WorkflowViewState.IdRef="Assign_5">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[in_Product]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[Regex.Replace(in_Product,"red","",RegexOptions.IgnoreCase)]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="433.6,80.8" sap2010:WorkflowViewState.IdRef="Assign_6">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[in_Product]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String" xml:space="preserve">[in_Product.Replace("  "," ")]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </If.Else>
          </If>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_4" />
      </If.Else>
    </If>
    <Assign sap:VirtualizedContainerService.HintSize="587.2,80.8" sap2010:WorkflowViewState.IdRef="Assign_4">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[out_Product]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[in_Product]</InArgument>
      </Assign.Value>
    </Assign>
  </Sequence>
</Activity>